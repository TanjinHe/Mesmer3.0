
import java.util.ArrayList;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReactionContiontion.java
 *
 * Created on 14-Dec-2010, 18:00:22
 */



/**
 *
 * @author mhh
 */
public class ReactionContiontion extends javax.swing.JPanel {


    public String unitCalculation = "PPCC";
    public String precision = "Double";
    public ExcelAdapter copyPast;
   

    /** Creates new form ReactionContiontion */
    public ReactionContiontion() {
        initComponents();
        jTable1.setCellSelectionEnabled(true);
       // jTable1.setColumnSelectionAllowed(true);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        copyPast = new ExcelAdapter(jTable1);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(807, 300));
        setPreferredSize(new java.awt.Dimension(807, 300));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16));
        jLabel1.setText("Reaction Conditions ");
        add(jLabel1);
        jLabel1.setBounds(300, 10, 180, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Unit of Calculation ");
        add(jLabel2);
        jLabel2.setBounds(650, 80, 140, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Precision");
        add(jLabel3);
        jLabel3.setBounds(670, 140, 90, 17);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PPCC", "Torr", "Mbar" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1);
        jComboBox1.setBounds(620, 110, 170, 20);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Double", "Long Double", "Quod Double" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        add(jComboBox2);
        jComboBox2.setBounds(620, 170, 170, 20);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Pressure", "Temperature"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 570, 220);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        unitCalculation = (String) jComboBox1.getSelectedItem();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        precision = (String) jComboBox2.getSelectedItem();

    }//GEN-LAST:event_jComboBox2ActionPerformed

    public String get_UnitCalculation()
    {
        return unitCalculation;
    }

    public String get_Precision()
    {
        return precision;
    }

    public String get_PressureTeperature()
    {
        String allValues, pressure, temperature;
        allValues="";
        pressure ="";
        temperature = "";
        
        for(int i = 0; i < jTable1.getRowCount(); i++){
            System.out.println( "Row " + i + "column 0 " + jTable1.getValueAt(i, 0) + 
                    "Row " + i + "column 1" + jTable1.getValueAt(i, 1) );
//            eachValue_Column0 =(String) jTable1.getValueAt(i, 0);
//            eachValue_Column1 = (String) jTable1.getValueAt(i, 1);
            pressure = (String) jTable1.getValueAt(i, 0);
            temperature = (String) jTable1.getValueAt(i, 1);

               if(pressure==null || temperature == null)
               {
                   System.out.println("Found break");
                   break;
               }
               else
               {
                   pressure =(String) jTable1.getValueAt(i, 0);
                   temperature = (String) jTable1.getValueAt(i, 1);
                   allValues+= pressure + " " + temperature + " ";
               }
          }

         System.out.println("All values are " + allValues);
         System.out.println("Pressure " + pressure );
         System.out.println("Temperature " + temperature);

         return  allValues;
    }

    public ArrayList<String> get_PressureValues()
    {
        
        String  pressure, temperature;
        ArrayList<String> allPressureValues = new ArrayList<String>();
        pressure ="";
        temperature = "";

        for(int i = 0; i < jTable1.getRowCount(); i++){
            System.out.println( "Row " + i + "column 0 " + jTable1.getValueAt(i, 0) +
                    "Row " + i + "column 1" + jTable1.getValueAt(i, 1) );
            pressure = (String) jTable1.getValueAt(i, 0);
            temperature = (String) jTable1.getValueAt(i, 1);

            //this is incase the user has enterd unequsl cell unit is either pressure or temp.
               if(pressure==null || temperature == null || pressure.equals("") || temperature.equals(""))
               {
                   System.out.println("Found break");
                   break;
               }
               else
               {
                // just add the pressure values as you are returing these values;
                   allPressureValues.add((String) jTable1.getValueAt(i, 0));
                  
               }
          }

        //print the values
        for(int i=0; i < allPressureValues.size(); i++ )
        {
            System.out.println("The values are for pressure " + allPressureValues.get(i) );
        }

         return  allPressureValues;
    }

    public ArrayList<String> get_TemperatureValues()
    {

        String  pressure, temperature;
        ArrayList<String> allTemperatureValues = new ArrayList<String>();
        pressure ="";
        temperature = "";

        for(int i = 0; i < jTable1.getRowCount(); i++){
            System.out.println( "Row " + i + "column 0 " + jTable1.getValueAt(i, 0) +
                    "Row " + i + "column 1" + jTable1.getValueAt(i, 1) );
            pressure = (String) jTable1.getValueAt(i, 0);
            temperature = (String) jTable1.getValueAt(i, 1);

            //this is incase the user has enterd unequsl cell unit is either pressure or temp.
               if(pressure==null || temperature == null || pressure.equals("") || temperature.equals("") )
               {
                   System.out.println("Found break");
                   break;
               }
               else
               {
                // just add the pressure values as you are returing these values;
                   allTemperatureValues.add((String) jTable1.getValueAt(i, 1));

               }
          }

        //print the values
        for(int i=0; i < allTemperatureValues.size(); i++ )
        {
            System.out.println("The values are for pressure " + allTemperatureValues.get(i) );
        }

         return  allTemperatureValues;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
